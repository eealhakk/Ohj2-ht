package treenipaivakirja.test;
// Generated by ComTest BEGIN
import treenipaivakirja.SailoException;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
import treenipaivakirja.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2023.05.06 12:15:34 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class TreenipaivakirjaTest {

  // Generated by ComTest BEGIN  // Treenipaivakirja: 22
   private Treenipaivakirja treenipaivakirja; 
   private Paiva aku1; 
   private Paiva aku2; 
   private int jid1; 
   private int jid2; 
   private Tulos pitsi21; 
   private Tulos pitsi11; 
   private Tulos pitsi22; 
   private Tulos pitsi12; 
   private Tulos pitsi23; 

   @SuppressWarnings("javadoc")
   public void alustaTreenipaivakirja() {
     treenipaivakirja = new Treenipaivakirja(); 
     aku1 = new Paiva(); aku1.vastaaEsimerkkiTreeni(); aku1.rekisteroi(); 
     aku2 = new Paiva(); aku2.vastaaEsimerkkiTreeni(); aku2.rekisteroi(); 
     jid1 = aku1.getTunnusNro(); 
     jid2 = aku2.getTunnusNro(); 
     pitsi21 = new Tulos(jid2); pitsi21.vastaaTulos(jid2); 
     pitsi11 = new Tulos(jid1); pitsi11.vastaaTulos(jid1); 
     pitsi22 = new Tulos(jid2); pitsi22.vastaaTulos(jid2); 
     pitsi12 = new Tulos(jid1); pitsi12.vastaaTulos(jid1); 
     pitsi23 = new Tulos(jid2); pitsi23.vastaaTulos(jid2); 
     try {
     treenipaivakirja.lisaa(aku1); 
     treenipaivakirja.lisaa(aku2); 
     treenipaivakirja.lisaa(pitsi21); 
     treenipaivakirja.lisaa(pitsi11); 
     treenipaivakirja.lisaa(pitsi22); 
     treenipaivakirja.lisaa(pitsi12); 
     treenipaivakirja.lisaa(pitsi23); 
     } catch ( Exception e) {
        System.err.println(e.getMessage()); 
     }
   }
  // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaTulokset103 */
  @Test
  public void testAnnaTulokset103() {    // Treenipaivakirja: 103
    Treenipaivakirja treenipaivakirja = new Treenipaivakirja(); 
    Paiva otus1 = new Paiva(), otus2 = new Paiva(), otus3 = new Paiva(); 
    otus1.rekisteroi(); otus2.rekisteroi(); otus3.rekisteroi(); 
    int id1 = otus1.getTunnusNro(); 
    int id2 = otus2.getTunnusNro(); 
    Tulos pitsi11 = new Tulos(id1); treenipaivakirja.lisaa(pitsi11); 
    Tulos pitsi12 = new Tulos(id1); treenipaivakirja.lisaa(pitsi12); 
    Tulos pitsi21 = new Tulos(id2); treenipaivakirja.lisaa(pitsi21); 
    Tulos pitsi22 = new Tulos(id2); treenipaivakirja.lisaa(pitsi22); 
    Tulos pitsi23 = new Tulos(id2); treenipaivakirja.lisaa(pitsi23); 
    List<Tulos> loytyneet; 
    loytyneet = treenipaivakirja.annaTulokset(otus3); 
    assertEquals("From: Treenipaivakirja line: 119", 0, loytyneet.size()); 
    loytyneet = treenipaivakirja.annaTulokset(otus1); 
    assertEquals("From: Treenipaivakirja line: 121", 2, loytyneet.size()); 
    assertEquals("From: Treenipaivakirja line: 122", true, loytyneet.get(0) == pitsi11); 
    assertEquals("From: Treenipaivakirja line: 123", true, loytyneet.get(1) == pitsi12); 
    loytyneet = treenipaivakirja.annaTulokset(otus2); 
    assertEquals("From: Treenipaivakirja line: 125", 3, loytyneet.size()); 
    assertEquals("From: Treenipaivakirja line: 126", true, loytyneet.get(0) == pitsi21); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testAnnaTulokset142 
   * @throws SailoException when error
   */
  @Test
  public void testAnnaTulokset142() throws SailoException {    // Treenipaivakirja: 142
    Paiva aku1 = new Paiva(); aku1.vastaaEsimerkkiTreeni(); 
    treenipaivakirja.lisaa(aku1); 
    Tulos har = new Tulos(); 
    har.vastaaTulos(aku1.getTunnusNro()); 
    treenipaivakirja.lisaa(har); 
    assertEquals("From: Treenipaivakirja line: 149", har, treenipaivakirja.annaTulokset(aku1).get(0)); 
    Paiva aku2 = new Paiva(); aku2.vastaaEsimerkkiTreeni(); 
    treenipaivakirja.lisaa(aku2); 
    assertEquals("From: Treenipaivakirja line: 153", 0, treenipaivakirja.annaTulokset(aku2).size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLisaa195 
   * @throws SailoException when error
   */
  @Test
  public void testLisaa195() throws SailoException {    // Treenipaivakirja: 195
    Treenipaivakirja treenipaivakirja = new Treenipaivakirja(); 
    Paiva abc = new Paiva(), ggg = new Paiva(); 
    abc.rekisteroi(); ggg.rekisteroi(); 
    assertEquals("From: Treenipaivakirja line: 200", 0, treenipaivakirja.getPaivia()); 
    treenipaivakirja.lisaa(abc); assertEquals("From: Treenipaivakirja line: 201", 1, treenipaivakirja.getPaivia()); 
    treenipaivakirja.lisaa(ggg); assertEquals("From: Treenipaivakirja line: 202", 2, treenipaivakirja.getPaivia()); 
    treenipaivakirja.lisaa(abc); assertEquals("From: Treenipaivakirja line: 203", 3, treenipaivakirja.getPaivia()); 
    assertEquals("From: Treenipaivakirja line: 204", 3, treenipaivakirja.getPaivia()); 
    assertEquals("From: Treenipaivakirja line: 205", abc, treenipaivakirja.annaPaiva(0)); 
    assertEquals("From: Treenipaivakirja line: 206", ggg, treenipaivakirja.annaPaiva(1)); 
    assertEquals("From: Treenipaivakirja line: 207", abc, treenipaivakirja.annaPaiva(2)); 
    try {
    assertEquals("From: Treenipaivakirja line: 208", abc, treenipaivakirja.annaPaiva(3)); 
    fail("Treenipaivakirja: 208 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    treenipaivakirja.lisaa(abc); assertEquals("From: Treenipaivakirja line: 209", 4, treenipaivakirja.getPaivia()); 
    treenipaivakirja.lisaa(abc); assertEquals("From: Treenipaivakirja line: 210", 5, treenipaivakirja.getPaivia()); 
    try {
    treenipaivakirja.lisaa(abc); 
    fail("Treenipaivakirja: 211 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoistaTulos267 
   * @throws Exception when error
   */
  @Test
  public void testPoistaTulos267() throws Exception {    // Treenipaivakirja: 267
    alustaTreenipaivakirja(); 
    assertEquals("From: Treenipaivakirja line: 270", 2, treenipaivakirja.annaTulokset(aku1).size()); 
    treenipaivakirja.poistaTulos(pitsi11); 
    assertEquals("From: Treenipaivakirja line: 272", 1, treenipaivakirja.annaTulokset(aku1).size()); 
  } // Generated by ComTest END
}
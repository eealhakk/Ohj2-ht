package treenipaivakirja.test;
// Generated by ComTest BEGIN
import java.io.*;
import java.util.*;
import treenipaivakirja.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2023.05.06 12:45:59 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class TuloksetTest {


  // Generated by ComTest BEGIN  // Tulokset: 25

  private Tulokset tulokset; 
  private String tiedNimi; 
  private File ftied; 

  @Before
  public void alusta() throws SailoException {
     tiedNimi = "testailutulokset"; 
     ftied = new File(tiedNimi+".db"); 
     ftied.delete(); 
     tulokset = new Tulokset(tiedNimi); 
  }

  @After
  public void siivoa() {
     ftied.delete(); 
  }
  // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoistaPaivanTulokset158 */
  @Test
  public void testPoistaPaivanTulokset158() {    // Tulokset: 158
    Tulokset tulokset = new Tulokset(); 
    Tulos pitsi21 = new Tulos(); pitsi21.vastaaTulos(2); 
    Tulos pitsi11 = new Tulos(); pitsi11.vastaaTulos(1); 
    Tulos pitsi22 = new Tulos(); pitsi22.vastaaTulos(2); 
    Tulos pitsi12 = new Tulos(); pitsi12.vastaaTulos(1); 
    Tulos pitsi23 = new Tulos(); pitsi23.vastaaTulos(2); 
    Tulos.lisaa(pitsi21); 
    Tulos.lisaa(pitsi11); 
    Tulos.lisaa(pitsi22); 
    Tulos.lisaa(pitsi12); 
    Tulos.lisaa(pitsi23); 
    assertEquals("From: Tulokset line: 170", 3, Tulos.poistaPaivanTulokset(2)); assertEquals("From: Tulokset line: 170", 2, tulokset.getLkm()); 
    assertEquals("From: Tulokset line: 171", 0, Tulos.poistaPaivanTulokset(3)); assertEquals("From: Tulokset line: 171", 2, tulokset.getLkm()); 
    List<Tulos> h = tulokset.annaTulokset(2); 
    assertEquals("From: Tulokset line: 173", 0, h.size()); 
    h = harrasteet.annaTulokset(1); 
    assertEquals("From: Tulokset line: 175", pitsi11, h.get(0)); 
    assertEquals("From: Tulokset line: 176", pitsi12, h.get(1)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKorvaaTaiLisaa217 
   * @throws SailoException when error
   */
  @Test
  public void testKorvaaTaiLisaa217() throws SailoException {    // Tulokset: 217
    Tulokset tulokset = new Tulokset(); 
    Tulos tulos1 = new Tulos(), tulos2 = new Tulos(); 
    tulos1.rekisteroi(); tulos2.rekisteroi(); 
    tulos1.vastaaTulos(); 
    tulos2.vastaaTulos(); 
    assertEquals("From: Tulokset line: 227", 0, tulokset.getLkm()); 
    tulokset.korvaaTaiLisaa(tulos1); assertEquals("From: Tulokset line: 228", 1, tulokset.getLkm()); 
    tulokset.korvaaTaiLisaa(tulos2); assertEquals("From: Tulokset line: 229", 2, tulokset.getLkm()); 
    Tulos tulos3 = tulos1.clone(); 
    tulos3.aseta(2, "xxx"); 
    Iterator<Tulos> it = tulokset.iterator(); 
    assertEquals("From: Tulokset line: 233", tulos1, it.next()); 
    tulokset.korvaaTaiLisaa(tulos3); assertEquals("From: Tulokset line: 234", 2, tulokset.getLkm()); 
    it = tulokset.iterator(); 
    Tulos t1 = it.next(); 
    Tulos t2 = it.next(); 
    assertEquals("From: Tulokset line: 238", tulos3, t1); 
    assertEquals("From: Tulokset line: 239", tulos2, t2); 
    assertEquals("From: Tulokset line: 240", t1.getTunnusNro(), tulos1.getTunnusNro()); 
    assertEquals("From: Tulokset line: 241", t2.getTunnusNro(), tulos2.getTunnusNro()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testIterator325 */
  @Test
  public void testIterator325() {    // Tulokset: 325
    Tulokset tulokset = new Tulokset(); 
    Tulos pitsi21 = new Tulos(2); tulokset.lisaa(pitsi21); 
    Tulos pitsi11 = new Tulos(1); tulokset.lisaa(pitsi11); 
    Tulos pitsi22 = new Tulos(2); tulokset.lisaa(pitsi22); 
    Tulos pitsi12 = new Tulos(1); tulokset.lisaa(pitsi12); 
    Tulos pitsi23 = new Tulos(2); tulokset.lisaa(pitsi23); 
    Iterator<Tulos> i2=tulokset.iterator(); 
    assertEquals("From: Tulokset line: 337", pitsi21, i2.next()); 
    assertEquals("From: Tulokset line: 338", pitsi11, i2.next()); 
    assertEquals("From: Tulokset line: 339", pitsi22, i2.next()); 
    assertEquals("From: Tulokset line: 340", pitsi12, i2.next()); 
    assertEquals("From: Tulokset line: 341", pitsi23, i2.next()); 
    try {
    assertEquals("From: Tulokset line: 342", pitsi12, i2.next()); 
    fail("Tulokset: 342 Did not throw NoSuchElementException");
    } catch(NoSuchElementException _e_){ _e_.getMessage(); }
    int n = 0; 
    int jnrot[] = { 2,1,2,1,2} ; 
    for ( Tulos har:tulokset ) {
    assertEquals("From: Tulokset line: 348", jnrot[n], har.getPaivaNro()); n++; 
    }
    assertEquals("From: Tulokset line: 351", 5, n); 
  } // Generated by ComTest END
}
package treenipaivakirja.test;
// Generated by ComTest BEGIN
import java.io.*;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
import treenipaivakirja.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2023.05.06 11:48:00 // Generated by ComTest
 *
 */
@SuppressWarnings({ "PMD" })
public class TuloksetTest {

  // Generated by ComTest BEGIN  // Tulokset: 25

  private Tulokset tulokset; 
  private String tiedNimi; 
  private File ftied; 

  @Before
  public void alusta() throws SailoException {
     tiedNimi = "testailutulokset"; 
     ftied = new File(tiedNimi+".db"); 
     ftied.delete(); 
     tulokset = new Tulokset(tiedNimi); 
  }

  @After
  public void siivoa() {
     ftied.delete(); 
  }
  // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKorvaaTaiLisaa192 
   * @throws CloneNotSupportedException when error
   * @throws SailoException when error
   */
  @Test
  public void testKorvaaTaiLisaa192() throws CloneNotSupportedException, SailoException {    // Tulokset: 192
    Tulokset tulokset = new Tulokset(); 
    Tulos tulos1 = new Tulos(), tulos2 = new Tulos(); 
    tulos1.rekisteroi(); tulos2.rekisteroi(); 
    tulos1.vastaaTulos(); 
    tulos2.vastaaTulos(); 
    assertEquals("From: Tulokset line: 201", 0, tulokset.getLkm()); 
    tulokset.korvaaTaiLisaa(tulos1); assertEquals("From: Tulokset line: 202", 1, tulokset.getLkm()); 
    tulokset.korvaaTaiLisaa(tulos2); assertEquals("From: Tulokset line: 203", 2, tulokset.getLkm()); 
    Tulos tulos3 = tulos1.clone(); 
    tulos3.aseta(2, "xxx"); 
    Iterator<Tulos> it = tulokset.iterator(); 
    assertEquals("From: Tulokset line: 207", tulos1, it.next()); 
    tulokset.korvaaTaiLisaa(tulos3); assertEquals("From: Tulokset line: 208", 2, tulokset.getLkm()); 
    it = tulokset.iterator(); 
    Tulos t1 = it.next(); 
    Tulos t2 = it.next(); 
    assertEquals("From: Tulokset line: 212", tulos3, t1); 
    assertEquals("From: Tulokset line: 213", tulos2, t2); 
    assertEquals("From: Tulokset line: 214", t1.getTunnusNro(), tulos1.getTunnusNro()); 
    assertEquals("From: Tulokset line: 215", t2.getTunnusNro(), tulos2.getTunnusNro()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testAnnaTulokset311 
   * @throws SailoException when error
   */
  @Test
  public void testAnnaTulokset311() throws SailoException {    // Tulokset: 311
    Tulos pitsi21 = new Tulos(2); pitsi21.vastaaTulos(2); tulokset.lisaa(pitsi21); 
    Tulos pitsi11 = new Tulos(1); pitsi11.vastaaTulos(1); tulokset.lisaa(pitsi11); 
    Tulos pitsi22 = new Tulos(2); pitsi22.vastaaTulos(2); tulokset.lisaa(pitsi22); 
    Tulos pitsi12 = new Tulos(1); pitsi12.vastaaTulos(1); tulokset.lisaa(pitsi12); 
    Tulos pitsi23 = new Tulos(2); pitsi23.vastaaTulos(2); tulokset.lisaa(pitsi23); 
    Tulos pitsi51 = new Tulos(5); pitsi51.vastaaTulos(5); tulokset.lisaa(pitsi51); 
    List<Tulos> loytyneet; 
    loytyneet = tulokset.annaTulokset(3); 
    assertEquals("From: Tulokset line: 324", 0, loytyneet.size()); 
    loytyneet = tulokset.annaTulokset(1); 
    assertEquals("From: Tulokset line: 326", 2, loytyneet.size()); 
    assertEquals("From: Tulokset line: 328", pitsi11, loytyneet.get(0)); 
    assertEquals("From: Tulokset line: 329", pitsi12, loytyneet.get(1)); 
    loytyneet = tulokset.annaTulokset(5); 
    assertEquals("From: Tulokset line: 332", 1, loytyneet.size()); 
    assertEquals("From: Tulokset line: 333", pitsi51, loytyneet.get(0)); 
  } // Generated by ComTest END
}